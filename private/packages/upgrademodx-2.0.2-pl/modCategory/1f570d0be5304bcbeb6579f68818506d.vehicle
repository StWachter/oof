<?php return array (
  'unique_key' => 'category',
  'preserve_keys' => false,
  'update_object' => true,
  'related_objects' => 
  array (
    'Chunks' => 
    array (
      '159892b60f11e5dfc1526daf4d99d09c' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modChunk',
        'object' => '{"id":1,"source":0,"property_preprocess":0,"name":"UpgradeMODXTpl","description":"Tpl chunk for alert widget","editor_type":0,"category":0,"cache_type":0,"snippet":"<div id=\\"Upgrade_modx\\">\\r\\n    <h3 style=\\"color:[[+ugm_notice_color]]\\">[[+ugm_notice]]<\\/h3>\\r\\n    <br\\/>[[+ugm_current_version_caption]]: [[+ugm_current_version]]\\r\\n    <br\\/>[[+ugm_latest_version_caption]]: [[+ugm_latest_version]]\\r\\n\\r\\n\\r\\n\\r\\n    [[+ugm_version_form]]\\r\\n    <div id=\\"ugm_errors\\">[[+ugm_errors]]<\\/div>\\r\\n<\\/div>\\r\\n<script src=\\"[[+ugm_assets_url]]js\\/classie.js\\"><\\/script>\\r\\n<script src=\\"[[+ugm_assets_url]]js\\/progressbutton.js\\"><\\/script>\\r\\n<script src=\\"[[+ugm_assets_url]]js\\/ugm-bottom.js\\"><\\/script>\\r\\n<p>&nbsp;<\\/p>\\r\\n\\r\\n\\r\\n","locked":0,"properties":"a:0:{}","static":0,"static_file":"","content":"<div id=\\"Upgrade_modx\\">\\r\\n    <h3 style=\\"color:[[+ugm_notice_color]]\\">[[+ugm_notice]]<\\/h3>\\r\\n    <br\\/>[[+ugm_current_version_caption]]: [[+ugm_current_version]]\\r\\n    <br\\/>[[+ugm_latest_version_caption]]: [[+ugm_latest_version]]\\r\\n\\r\\n\\r\\n\\r\\n    [[+ugm_version_form]]\\r\\n    <div id=\\"ugm_errors\\">[[+ugm_errors]]<\\/div>\\r\\n<\\/div>\\r\\n<script src=\\"[[+ugm_assets_url]]js\\/classie.js\\"><\\/script>\\r\\n<script src=\\"[[+ugm_assets_url]]js\\/progressbutton.js\\"><\\/script>\\r\\n<script src=\\"[[+ugm_assets_url]]js\\/ugm-bottom.js\\"><\\/script>\\r\\n<p>&nbsp;<\\/p>\\r\\n\\r\\n\\r\\n"}',
        'guid' => '91a522bb4d4df424a939f1601d6adb20',
        'native_key' => 1,
        'signature' => '6dc6db36f07dcc96edc8fb8026ebfec3',
      ),
    ),
    'Snippets' => 
    array (
      '0e747fd6f05f019af871441c03568336' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modSnippet',
        'object' => '{"id":1,"source":0,"property_preprocess":0,"name":"UpgradeMODXWidget","description":"Upgrade MODX Dashboard widget","editor_type":0,"category":0,"cache_type":0,"snippet":"\\/**\\n * UpgradeMODXWidget snippet for UpgradeMODX extra\\n *\\n * Copyright 2015-2018 Bob Ray <https:\\/\\/bobsguides.com>\\n * Created on 08-16-2015\\n *\\n * UpgradeMODX is free software; you can redistribute it and\\/or modify it under the\\n * terms of the GNU General Public License as published by the Free Software\\n * Foundation; either version 2 of the License, or (at your option) any later\\n * version.\\n *\\n * UpgradeMODX is distributed in the hope that it will be useful, but WITHOUT ANY\\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\\n * A PARTICULAR PURPOSE. See the GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * UpgradeMODX; if not, write to the Free Software Foundation, Inc., 59 Temple\\n * Place, Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @package upgrademodx\\n *\\/\\n\\n\\/**\\n * Description\\n * -----------\\n * UpgradeMODX Dashboard widget\\n * This package was inspired by the work of a number of people and I have borrowed some of their code.\\n * Dmytro Lukianenko (dmi3yy) is the original author of the MODX install script. Susan Sottwell, Sharapov,\\n * Bumkaka, Inreti, Zaigham Rana, frischnetz, and AgelxNash, also contributed and I\'d like to thank all\\n * of them for laying the groundwork.\\n *\\n * Variables\\n * ---------\\n * @var $modx modX\\n * @var $scriptProperties array\\n *\\n * @package upgrademodx\\n **\\/\\n\\n\\/* Properties\\n\\n * @property &groups textfield -- group, or commma-separated list of groups, who will see the widget; Default: (empty)..\\n * @property &hideWhenNoUpgrade combo-boolean -- Hide widget when no upgrade is available; Default: No.\\n * @property &interval textfield -- Interval between checks -- Examples: 1 week, 3 days, 6 hours; Default: 1 week.\\n * @property &language textfield -- Two-letter code of language to user; Default: en.\\n * @property &lastCheck textfield -- Date and time of last check -- set automatically; Default: (empty)..\\n * @property &latestVersion textfield -- Latest version (at last check) -- set automatically; Default: (empty)..\\n * @property &plOnly combo-boolean -- Show only pl (stable) versions; Default: yes.\\n * @property &versionsToShow textfield -- Number of versions to show in upgrade form (not widget); Default: 5.\\n\\n *\\/\\n\\nif (php_sapi_name() === \'cli\') {\\n    \\/* This section for debugging during development. It won\'t execute in MODX *\\/\\n\\/*    include \'C:\\\\xampp\\\\htdocs\\\\addons\\\\assets\\\\mycomponents\\\\instantiatemodx\\\\instantiatemodx.php\';\\n    $snippet =\\n    $scriptProperties = array(\\n        \'versionsToShow\' => 5,\\n        \'hideWhenNoUpgrade\' => false,\\n        \'lastCheck\' => \'\',\\n        \'interval\' => \'+60 seconds\',\\n        \'plOnly\' => false,\\n        \'language\' => \'en\',\\n        \'forcePclZip\' => false,\\n        \'currentVersion\' => $modx->getOption(\'settings_version\'),\\n        \'latestVersion\' => \'2.4.3-pl\',\\n        \'githubTimeout\' => 6,\\n        \'modxTimeout\' => 6,\\n    );*\\/\\n\\n}\\n\\n\\/* Initialize *\\/\\n\\/* This will execute when in MODX *\\/\\n$language = $modx->getOption(\'ugm_language\', null, $modx->getOption(\'manager_language\'), true);\\n$language = empty($language) ? \'en\' : $language;\\n$props = $scriptProperties;\\n$modx->lexicon->load($language . \':upgrademodx:default\');\\n\\/* Return empty string if user shouldn\'t see widget *\\/\\n$devMode = $modx->getOption(\'ugm.devMode\', null, false, true);\\n$groups = $modx->getOption(\'ugm_groups\', null, \'Administrator\', true);\\n\\nif (strpos($groups, \',\') !== false) {\\n    $groups = explode(\',\', $groups);\\n}\\nif (! $modx->user->isMember($groups)) {\\n    return \'\';\\n}\\n\\n$corePath = $modx->getOption(\'ugm.core_path\', null, $modx->getOption(\'core_path\', null, MODX_CORE_PATH) . \'components\\/upgrademodx\\/\');\\n$assetsUrl = $modx->getOption(\'ugm.assets_url\', null, $modx->getOption(\'assets_url\', null, MODX_ASSETS_URL) . \'components\\/upgrademodx\\/\');\\nrequire_once($corePath . \'model\\/upgrademodx\\/upgrademodx.class.php\');\\n$upgrade = new UpgradeMODX($modx);\\n$upgrade->init($props);\\n$props[\'ugm_setup_url\'] = MODX_SITE_URL . \'setup\\/index.php\';\\nunset($props[\'controller\']); \\/\\/ remove trash from scriptProperties\\n$modx->regClientStartupScript(\'<script>\\nvar ugmConnectorUrl = \\"\' . $assetsUrl . \'connector.php\\";\\nvar ugm_config = \' . $modx->toJSON($props)  . \';\\nvar ugm_setup_url = \\"\' . MODX_SITE_URL . \'setup\\/index.php\\";\\n<\\/script>\'\\n);\\n$modx->regClientCSS($assetsUrl . \'css\\/progress.css\');\\n$modx->regClientStartupScript(\\"\\/\\/ajax.googleapis.com\\/ajax\\/libs\\/jquery\\/1.9.1\\/jquery.min.js\\");\\n$modx->regClientStartupScript($assetsUrl . \'js\\/modernizr.custom.js\');\\n$lastCheck = $modx->getOption(\'ugm_last_check\', null, \'2015-08-17 00:00:004\', true);\\n$interval = $modx->getOption(\'ugm_interval\', null, \'+1 day\', true);\\n$hideWhenNoUpgrade = $modx->getOption(\'ugm_hide_when_no_upgrade\', null, false, true);\\n$plOnly = $modx->getOption(\'ugm_pl_only\', null, true, true);\\n$versionsToShow = $modx->getOption(\'ugm_versions_to_show\', null, 5, true);\\n$settingsVersion = $modx->getOption(\'settings_version\');\\n$latestVersion = $modx->getOption(\'ugm_latest_version\', null, \'\', true);\\n\\/* $fileVersion is current version at time of last versionlist creation *\\/\\n$fileVersion = $modx->getOption(\'ugm_file_version\', null, \'\', true);\\n$regenerate = false;\\nif ($fileVersion !== $settingsVersion) {\\n    $regenerate = true;\\n}\\n\\n\\/* Set Placeholders *\\/\\n$placeholders = array();\\n$placeholders[\'[[+ugm_assets_url]]\'] = $assetsUrl;\\n$placeholders[\'[[+ugm_current_version]]\'] = $settingsVersion;\\n$placeholders[\'[[+ugm_current_version_caption]]\'] = $modx->lexicon(\'ugm_current_version_caption\');\\n$placeholders[\'[[+ugm_latest_version_caption]]\'] = $modx->lexicon(\'ugm_latest_version_caption\');\\n\\n$versionListExists = $upgrade->versionListExists();\\n\\n$timeToCheck = $upgrade->timeToCheck($lastCheck, $interval);\\n\\n\\/* Perform check if no latestVersion, or if it\'s time to check, or settings_version has been changed *\\/\\nif ((!$versionListExists ) || $timeToCheck || empty($latestVersion) || $regenerate) {\\n    $upgradeAvailable = $upgrade->upgradeAvailable($settingsVersion);\\n    $latestVersion = $upgrade->getLatestVersion();\\n} else {\\n    $upgradeAvailable = version_compare($settingsVersion, $latestVersion) < 0;\\n}\\n\\n$placeholders[\'[[+ugm_latest_version]]\'] = $latestVersion;\\n\\nif ($devMode) {\\n    $upgradeAvailable = true;\\n}\\n\\nif ($upgradeAvailable) {\\n    $versionForm = $upgrade->createVersionForm($modx);\\n}\\n\\n$errors = $upgrade->getErrors();\\n\\nif (!empty($errors)) {\\n    $msg = \'\';\\n    foreach ($errors as $error) {\\n        $msg .= \'<br\\/><span style=\\"color:red\\">\' . $modx->lexicon(\'ugm_error\') .\\n            \': \' . $error . \'<\\/span>\';\\n    }\\n\\n    return $msg;\\n}\\n\\n\\/* Process *\\/\\n\\n\\/* See if there\'s a new version *\\/\\nif ($upgradeAvailable) {\\n    $placeholders[\'[[+ugm_notice]]\'] = $modx->lexicon(\'ugm_upgrade_available\');\\n    $placeholders[\'[[+ugm_notice_color]]\'] = \'green\';\\n    $placeholders[\'[[+ugm_version_form]]\'] = $versionForm;\\n} else {\\n    if ($hideWhenNoUpgrade) {\\n        return \'\';\\n    } else {\\n        $placeholders[\'[[+ugm_notice]]\'] = $modx->lexicon(\'ugm_modx_up_to_date\');\\n        $placeholders[\'[[+ugm_notice_color]]\'] = \'gray\';\\n    }\\n}\\n\\/* Get Tpl *\\/\\n$tpl = $modx->getChunk(\'UpgradeMODXTpl\');\\n\\n\\/* Do the replacements *\\/\\n$tpl = str_replace(array_keys($placeholders), array_values($placeholders), $tpl);\\n\\n\\/*if (php_sapi_name() === \'cli\') {\\n    echo $tpl;\\n}*\\/\\n\\nreturn $tpl;","locked":0,"properties":"a:0:{}","moduleguid":"","static":0,"static_file":"","content":"\\/**\\n * UpgradeMODXWidget snippet for UpgradeMODX extra\\n *\\n * Copyright 2015-2018 Bob Ray <https:\\/\\/bobsguides.com>\\n * Created on 08-16-2015\\n *\\n * UpgradeMODX is free software; you can redistribute it and\\/or modify it under the\\n * terms of the GNU General Public License as published by the Free Software\\n * Foundation; either version 2 of the License, or (at your option) any later\\n * version.\\n *\\n * UpgradeMODX is distributed in the hope that it will be useful, but WITHOUT ANY\\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\\n * A PARTICULAR PURPOSE. See the GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * UpgradeMODX; if not, write to the Free Software Foundation, Inc., 59 Temple\\n * Place, Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @package upgrademodx\\n *\\/\\n\\n\\/**\\n * Description\\n * -----------\\n * UpgradeMODX Dashboard widget\\n * This package was inspired by the work of a number of people and I have borrowed some of their code.\\n * Dmytro Lukianenko (dmi3yy) is the original author of the MODX install script. Susan Sottwell, Sharapov,\\n * Bumkaka, Inreti, Zaigham Rana, frischnetz, and AgelxNash, also contributed and I\'d like to thank all\\n * of them for laying the groundwork.\\n *\\n * Variables\\n * ---------\\n * @var $modx modX\\n * @var $scriptProperties array\\n *\\n * @package upgrademodx\\n **\\/\\n\\n\\/* Properties\\n\\n * @property &groups textfield -- group, or commma-separated list of groups, who will see the widget; Default: (empty)..\\n * @property &hideWhenNoUpgrade combo-boolean -- Hide widget when no upgrade is available; Default: No.\\n * @property &interval textfield -- Interval between checks -- Examples: 1 week, 3 days, 6 hours; Default: 1 week.\\n * @property &language textfield -- Two-letter code of language to user; Default: en.\\n * @property &lastCheck textfield -- Date and time of last check -- set automatically; Default: (empty)..\\n * @property &latestVersion textfield -- Latest version (at last check) -- set automatically; Default: (empty)..\\n * @property &plOnly combo-boolean -- Show only pl (stable) versions; Default: yes.\\n * @property &versionsToShow textfield -- Number of versions to show in upgrade form (not widget); Default: 5.\\n\\n *\\/\\n\\nif (php_sapi_name() === \'cli\') {\\n    \\/* This section for debugging during development. It won\'t execute in MODX *\\/\\n\\/*    include \'C:\\\\xampp\\\\htdocs\\\\addons\\\\assets\\\\mycomponents\\\\instantiatemodx\\\\instantiatemodx.php\';\\n    $snippet =\\n    $scriptProperties = array(\\n        \'versionsToShow\' => 5,\\n        \'hideWhenNoUpgrade\' => false,\\n        \'lastCheck\' => \'\',\\n        \'interval\' => \'+60 seconds\',\\n        \'plOnly\' => false,\\n        \'language\' => \'en\',\\n        \'forcePclZip\' => false,\\n        \'currentVersion\' => $modx->getOption(\'settings_version\'),\\n        \'latestVersion\' => \'2.4.3-pl\',\\n        \'githubTimeout\' => 6,\\n        \'modxTimeout\' => 6,\\n    );*\\/\\n\\n}\\n\\n\\/* Initialize *\\/\\n\\/* This will execute when in MODX *\\/\\n$language = $modx->getOption(\'ugm_language\', null, $modx->getOption(\'manager_language\'), true);\\n$language = empty($language) ? \'en\' : $language;\\n$props = $scriptProperties;\\n$modx->lexicon->load($language . \':upgrademodx:default\');\\n\\/* Return empty string if user shouldn\'t see widget *\\/\\n$devMode = $modx->getOption(\'ugm.devMode\', null, false, true);\\n$groups = $modx->getOption(\'ugm_groups\', null, \'Administrator\', true);\\n\\nif (strpos($groups, \',\') !== false) {\\n    $groups = explode(\',\', $groups);\\n}\\nif (! $modx->user->isMember($groups)) {\\n    return \'\';\\n}\\n\\n$corePath = $modx->getOption(\'ugm.core_path\', null, $modx->getOption(\'core_path\', null, MODX_CORE_PATH) . \'components\\/upgrademodx\\/\');\\n$assetsUrl = $modx->getOption(\'ugm.assets_url\', null, $modx->getOption(\'assets_url\', null, MODX_ASSETS_URL) . \'components\\/upgrademodx\\/\');\\nrequire_once($corePath . \'model\\/upgrademodx\\/upgrademodx.class.php\');\\n$upgrade = new UpgradeMODX($modx);\\n$upgrade->init($props);\\n$props[\'ugm_setup_url\'] = MODX_SITE_URL . \'setup\\/index.php\';\\nunset($props[\'controller\']); \\/\\/ remove trash from scriptProperties\\n$modx->regClientStartupScript(\'<script>\\nvar ugmConnectorUrl = \\"\' . $assetsUrl . \'connector.php\\";\\nvar ugm_config = \' . $modx->toJSON($props)  . \';\\nvar ugm_setup_url = \\"\' . MODX_SITE_URL . \'setup\\/index.php\\";\\n<\\/script>\'\\n);\\n$modx->regClientCSS($assetsUrl . \'css\\/progress.css\');\\n$modx->regClientStartupScript(\\"\\/\\/ajax.googleapis.com\\/ajax\\/libs\\/jquery\\/1.9.1\\/jquery.min.js\\");\\n$modx->regClientStartupScript($assetsUrl . \'js\\/modernizr.custom.js\');\\n$lastCheck = $modx->getOption(\'ugm_last_check\', null, \'2015-08-17 00:00:004\', true);\\n$interval = $modx->getOption(\'ugm_interval\', null, \'+1 day\', true);\\n$hideWhenNoUpgrade = $modx->getOption(\'ugm_hide_when_no_upgrade\', null, false, true);\\n$plOnly = $modx->getOption(\'ugm_pl_only\', null, true, true);\\n$versionsToShow = $modx->getOption(\'ugm_versions_to_show\', null, 5, true);\\n$settingsVersion = $modx->getOption(\'settings_version\');\\n$latestVersion = $modx->getOption(\'ugm_latest_version\', null, \'\', true);\\n\\/* $fileVersion is current version at time of last versionlist creation *\\/\\n$fileVersion = $modx->getOption(\'ugm_file_version\', null, \'\', true);\\n$regenerate = false;\\nif ($fileVersion !== $settingsVersion) {\\n    $regenerate = true;\\n}\\n\\n\\/* Set Placeholders *\\/\\n$placeholders = array();\\n$placeholders[\'[[+ugm_assets_url]]\'] = $assetsUrl;\\n$placeholders[\'[[+ugm_current_version]]\'] = $settingsVersion;\\n$placeholders[\'[[+ugm_current_version_caption]]\'] = $modx->lexicon(\'ugm_current_version_caption\');\\n$placeholders[\'[[+ugm_latest_version_caption]]\'] = $modx->lexicon(\'ugm_latest_version_caption\');\\n\\n$versionListExists = $upgrade->versionListExists();\\n\\n$timeToCheck = $upgrade->timeToCheck($lastCheck, $interval);\\n\\n\\/* Perform check if no latestVersion, or if it\'s time to check, or settings_version has been changed *\\/\\nif ((!$versionListExists ) || $timeToCheck || empty($latestVersion) || $regenerate) {\\n    $upgradeAvailable = $upgrade->upgradeAvailable($settingsVersion);\\n    $latestVersion = $upgrade->getLatestVersion();\\n} else {\\n    $upgradeAvailable = version_compare($settingsVersion, $latestVersion) < 0;\\n}\\n\\n$placeholders[\'[[+ugm_latest_version]]\'] = $latestVersion;\\n\\nif ($devMode) {\\n    $upgradeAvailable = true;\\n}\\n\\nif ($upgradeAvailable) {\\n    $versionForm = $upgrade->createVersionForm($modx);\\n}\\n\\n$errors = $upgrade->getErrors();\\n\\nif (!empty($errors)) {\\n    $msg = \'\';\\n    foreach ($errors as $error) {\\n        $msg .= \'<br\\/><span style=\\"color:red\\">\' . $modx->lexicon(\'ugm_error\') .\\n            \': \' . $error . \'<\\/span>\';\\n    }\\n\\n    return $msg;\\n}\\n\\n\\/* Process *\\/\\n\\n\\/* See if there\'s a new version *\\/\\nif ($upgradeAvailable) {\\n    $placeholders[\'[[+ugm_notice]]\'] = $modx->lexicon(\'ugm_upgrade_available\');\\n    $placeholders[\'[[+ugm_notice_color]]\'] = \'green\';\\n    $placeholders[\'[[+ugm_version_form]]\'] = $versionForm;\\n} else {\\n    if ($hideWhenNoUpgrade) {\\n        return \'\';\\n    } else {\\n        $placeholders[\'[[+ugm_notice]]\'] = $modx->lexicon(\'ugm_modx_up_to_date\');\\n        $placeholders[\'[[+ugm_notice_color]]\'] = \'gray\';\\n    }\\n}\\n\\/* Get Tpl *\\/\\n$tpl = $modx->getChunk(\'UpgradeMODXTpl\');\\n\\n\\/* Do the replacements *\\/\\n$tpl = str_replace(array_keys($placeholders), array_values($placeholders), $tpl);\\n\\n\\/*if (php_sapi_name() === \'cli\') {\\n    echo $tpl;\\n}*\\/\\n\\nreturn $tpl;"}',
        'guid' => '8f0e9bcacb9534793556402f2d58f796',
        'native_key' => 1,
        'signature' => '21188380538a69b6dddebb4e9b455d3c',
      ),
    ),
  ),
  'abort_install_on_vehicle_fail' => true,
  'related_object_attributes' => 
  array (
    'Snippets' => 
    array (
      'preserve_keys' => false,
      'update_object' => true,
      'unique_key' => 'name',
    ),
    'Chunks' => 
    array (
      'preserve_keys' => false,
      'update_object' => true,
      'unique_key' => 'name',
    ),
  ),
  'namespace' => 'upgrademodx',
  'resolve' => 
  array (
    0 => 
    array (
      'type' => 'file',
      'body' => '{"source":"upgrademodx-2.0.2-pl\\/modCategory\\/1f570d0be5304bcbeb6579f68818506d\\/0\\/","target":"return MODX_CORE_PATH . \'components\\/\';","name":"upgrademodx"}',
    ),
    1 => 
    array (
      'type' => 'file',
      'body' => '{"source":"upgrademodx-2.0.2-pl\\/modCategory\\/1f570d0be5304bcbeb6579f68818506d\\/1\\/","target":"return MODX_ASSETS_PATH . \'components\\/\';","name":"upgrademodx"}',
    ),
    2 => 
    array (
      'type' => 'php',
      'body' => '{"source":"upgrademodx-2.0.2-pl\\/modCategory\\/1f570d0be5304bcbeb6579f68818506d.widget.resolver.resolver","type":"php","name":"widget.resolver"}',
    ),
    3 => 
    array (
      'type' => 'php',
      'body' => '{"source":"upgrademodx-2.0.2-pl\\/modCategory\\/1f570d0be5304bcbeb6579f68818506d.upgrademodx.resolver.resolver","type":"php","name":"upgrademodx.resolver"}',
    ),
  ),
  'validate' => 
  array (
    0 => 
    array (
      'type' => 'php',
      'body' => '{"source":"upgrademodx-2.0.2-pl\\/modCategory\\/1f570d0be5304bcbeb6579f68818506d.upgrademodx.validator.validator","type":"php","name":"upgrademodx.validator"}',
    ),
  ),
  'vehicle_package' => 'transport',
  'vehicle_class' => 'xPDOObjectVehicle',
  'guid' => 'face69d81c332d2019c993911e766ccf',
  'package' => 'modx',
  'class' => 'modCategory',
  'signature' => '1f570d0be5304bcbeb6579f68818506d',
  'native_key' => 1,
  'object' => '{"id":1,"parent":0,"category":"UpgradeMODX","rank":0}',
);